=======================================================
Setup a Raspberry Pi bare-bones Web server (PHP, Nginx)
=======================================================

files
-----
access.log  /var/log/nginx/access.log
error.log   /var/log/nginx/error.log
nigl.conf   /etc/nginx/sites-available/nigl.conf
smb.conf    /etc/samba/smb.conf
php.ini     /usr/lib/php/8.2/php.ini

nginx commands
--------------
sudo nginx -v                                 # get nginx version.
sudo nginx -t                                 # Test the nginx config files.
sudo systemctl reload nginx                   # Reload the nginx config files.
sudo service nginx restart                    # Restart nginx.

php commands
------------
sudo service php8.2-fpm status                # check if php is running ok
sudo /etc/init.d/php8.2-fpm restart           # restart php-fpm

samba commands
--------------
samba -- version                              # show samba version
sudo systemctl restart smbd                   # restart the Samba service

misc commands
-------------
df -h                                         # disk free, human readable
du -h ~                                       # disk usage, human readable, home dir




/**********************
* update & upgrade
*
* Note that "full-upgrade" is used in preference to a simple upgrade, as it also
* picks up any dependency changes that may have been made.
**********************/
sudo apt update
sudo apt full-upgrade
sudo apt install jed -y
sudo apt autoremove -y




/**********************
* samba
**********************/
sudo apt-get install samba samba-common-bin -y
sudo smbpasswd -a nig                               # Set a Samba password for nig.
sudo jed /etc/samba/smb.conf                        # Append to Samba config;
  [nas]
  path = /mnt/sda1
  writeable=Yes
  create mask=0777
  directory mask=0777
  public=no
  valid users = nig
sudo systemctl restart smbd                         # Restart the Samba service.

On a Windows machine, map a network drive;
  folder        \\nigl.lan\vol1
  user/pass     nig/<usual>




/************************
* install & config php  *
************************/
sudo apt install php8.2-fpm -y                            # Install php-fpm.
sudo cp /usr/lib/php/8.2/{php.ini-development,php.ini}    # Use the development version of php.ini.




/************************
* install git           *
************************/
sudo apt install git-all
cd /var/sites/nigl
git clone https://github.com/nig66/ytplayer.git
sudo chown -R nig ytplayer
git config --global --add safe.directory '%(prefix)///nigl/vol1/var/sites/ytplayer'


/**********************
* nginx
**********************/
sudo apt install nginx -y                             # Browsing to client should now show "Welcome to nginx!"
sudo rm /etc/nginx/sites-enabled/default              # Disable default nginx site.
sudo systemctl reload nginx                           # Browsing to pi3b.local should now show "This site canâ€™t be reached".
sudo touch /etc/nginx/sites-available/nigl.conf
sudo chown nig /etc/nginx/sites-available/nigl.conf   # Make it editable via samba.
sudo ln -s /etc/nginx/sites-available/nigl.conf /etc/nginx/sites-enabled/   # Create a link to the site .conf file.
sudo mkdir -p /var/sites/nigl                         # -p for path i.e. recursively create dirs.

Either manually enter a nigl.conf file;

  sudo jed file /etc/nginx/sites-available/nigl.conf

    server {
      server_name pi3b.local;
      root        /var/sites/nigl/www;
      index       index.html;
      
      # pass PHP scripts to FastCGI (PHP-FPM) server
      location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
      }
    }

Or copy it over the network from my PC to pi1b.local;

  pscp -i c:\Users\nig\.ssh\id_rsa.ppk nigl.conf nig@nigl.lan:/etc/nginx/sites-available

Enable the nigl site;

  sudo nginx -t                       # Test the nginx config files.
  sudo systemctl reload nginx         # Browsing to pi1b.local should now show "404 Not Found".
